AWSTemplateFormatVersion: 2010-09-09
Description: Create Allers Role and Policy for the CYC environment 
Parameters:
  Envr:
      Description: Enter the environment Value please
      Type: String

  Owner:
    Description: Owner of the resource
    Type: String
    Default: Sree G

Conditions: 
  zone1: !Equals [ '1','1']   

Resources:
  cycallertsexecutionrole: 
    Type: AWS::IAM::Role
    Properties: 
      RoleName: !Join ["-",[!Ref Envr, allerts, Role01a]]
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - 'lambda.amazonaws.com'
                - 'events.amazonaws.com'
                - 'sqs.amazonaws.com'
                - 'sns.amazonaws.com'
            Action: 
              - "sts:AssumeRole"
      Path: "/"

  cyccloudFormationAccess:  
    Type: 'AWS::IAM::ManagedPolicy'  
    Condition:  zone1
    Properties: 
      Description:  CloudFormationAccess
      Path: /
      ManagedPolicyName: !Join ["-",[!Ref Envr, allerts, "Policy01a"]]
      PolicyDocument: 
        Version: 2012-10-17
        Statement:
          - 
            Effect: Allow
            Resource: 
              - !Join ['', ['arn:aws:lambda:', !Ref "AWS::Region",':', !Ref "AWS::AccountId", ':function:', !Ref Envr, '*']]
              - !Join ['', ['arn:aws:cloudformation:', !Ref "AWS::Region",':', !Ref "AWS::AccountId", ':stack/*']]
              - !Join ['', ['arn:aws:ecs:', !Ref "AWS::Region",':', !Ref "AWS::AccountId", ':service/*']]
              - !Join ['', ['arn:aws:ecr:', !Ref "AWS::Region",':', !Ref "AWS::AccountId", ':repository/*']]
              - !Join ['', ['arn:aws:logs:', !Ref "AWS::Region",':', !Ref "AWS::AccountId", ':log-group:*']]
              - !Join ['', ['arn:aws:events:', !Ref "AWS::Region",':', !Ref "AWS::AccountId", ':rule/', !Ref Envr, '*']]
              - !Join ['', ['arn:aws:ssm:', !Ref "AWS::Region",':', !Ref "AWS::AccountId", ':*']]
              - !Join ['', ['arn:aws:kms:', !Ref "AWS::Region",':', !Ref "AWS::AccountId", ':*']]
              - !Join ['', ['arn:aws:iam::', !Ref "AWS::AccountId", ':*']]              
            Sid: "cyccloudformationallowPolicy01"
            Action: 
               - cloudformation:*
               - ecr:GetAuthorizationToken
               - ecr:BatchCheckLayerAvailability
               - ecr:GetDownloadUrlForLayer
               - ecr:BatchGetImage
               - ecs:RunTask
               - logs:CreateLogStream
               - logs:CreateLogGroup
               - logs:PutLogEvents
               - lambda:InvokeFunction
               - events:PutEvents
               - logs:PutLogEvents
               - ec2:RebootInstances
               - ec2:StopInstances
               - ec2:TerminateInstances 
               - iam:PassRole
               - sns:Publish
               - ssm:StartAutomationExecution
               - ssm:CreateOpsItem
               - kms:CreateGrant
      Roles: 
        - 
          Ref: cycallertsexecutionrole

Outputs:

  Allertspolicy:
    Value: !Ref cyccloudFormationAccess
    Export: 
      Name: !Join ["-",[!Ref Envr, allerts, Policyid1]] 
    Condition:  zone1
    Description: Fn::Join ["-", [ allerts Role  Policy for, !Ref Envr]]

  Allertsrole:
    Value: !Ref cycallertsexecutionrole
    Export: 
      Name: !Join ["-",[!Ref Envr, allerts, Roleid1]] 
    Condition:  zone1
    Description: Fn::Join ["-", [ allerts Role  Role for, !Ref Envr]]

  AllertsroleArn:
    Value: !GetAtt [cycallertsexecutionrole, Arn]
    Export: 
      Name: !Join ["-",[!Ref Envr, allerts, RoleArn1]] 
    Condition:  zone1
    Description: Fn::Join ["-", [ allerts Role Arn for, !Ref Envr]]

